---
title: "Predicting 2000-2014 Fatal Accidents using 1985-1999 data PLUS ADDED COLUMNS""
output:
  pdf_document: default
  word_document: default
  html_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

### Load in the dataset from csv file
```{r}
library(randomForest)
library(tree)
library(e1071)
library(readr)

# NOTE: Make sure to replace the path variable with your own path to the file
airline_safety_new <- read.csv("/Users/carolineoliver/airline-safety-new.csv")
# REPLACE LINE ABOVE WITH YOUR PATH: airline_safety <- read.csv("path_to_csv_file_here")
```

#### Convert fatal accident numbers to 1 or 0
```{r}
i = 0
# Y_N stands for Yes_No
# Yes there were fatal accidents = 1
# No there were no fatal accidents = 0
fatal_accY_N_00_14 = vector()

for (i in seq(nrow(airline_safety_new))){
  if(airline_safety_new$fatal_accidents_00_14[i] == 0){
    fatal_accY_N_00_14[i] = 0
  }
  else{
    fatal_accY_N_00_14[i] = 1
  }
}
```

#### Create new data frame for prediction
```{r}
fatal_pred_df = airline_safety_new[ ,3:6]
fatal_pred_df = cbind(fatal_pred_df, airline_safety_new[ ,10:13])
View(fatal_pred_df)

fatal_pred_df$fatal_accY_N_00_14 = fatal_accY_N_00_14
colnames(fatal_pred_df)[9] = "fatal_accY_N_00_14"
```

### Predict all airlines to have fatal accidents - Error Rate
```{r}
table(fatal_accY_N_00_14)

32 / 55
```

### Predict all airlines to NOT have fatal accidents - Error Rate
```{r}
table(fatal_accY_N_00_14)

23 / 55
```

### GLM Model
```{r}
glm_model = glm(fatal_accY_N_00_14 ~ ., data=fatal_pred_df)
summary(glm_model)

glm.pred<-predict(glm_model,fatal_pred_df)
glm.pred
average_pred_value = sum(glm.pred)/55

# get 1 or 0 value for prediction
i = 0
predY_N = vector()

for (i in seq(nrow(airline_safety_new))){
  if(glm.pred[i] > average_pred_value){
    predY_N[i] = 1
  }
  else{
    predY_N[i] = 0
  }
}
```

#### GLM Confusion matrix
```{r}
table(predict=predY_N,truth=fatal_accY_N_00_14)
```

#### GLM Error rate
```{r}
(7 + 6) / (7 + 6 + 16 + 26)
```

### Tree Classification Model
```{r fig2, fig.height = 8, fig.width = 10, fig.align = "center"}
fatal.tree<-tree(fatal_accY_N_00_14 ~ ., data=fatal_pred_df)
summary(fatal.tree)

plot(fatal.tree)
text(fatal.tree,pretty=0)

fatal_tree.pred<-predict(fatal.tree)
fatal_tree.pred

i = 0
tree_predY_N = vector()

for (i in seq(nrow(airline_safety_new))){
  if(fatal_tree.pred[i] > 0.5){
    tree_predY_N[i] = 1
  }
  else{
    tree_predY_N[i] = 0
  }
}
```

#### Tree Confusion Matrix
```{r}
table(tree_predY_N,fatal_accY_N_00_14)
```

#### Tree Error Rate
```{r}
(4 + 4) / (4 + 4 + 28 + 19)
```

### Random Forest
```{r}
fatal_pred_df$fatal_accY_N_00_14<-as.factor(fatal_pred_df$fatal_accY_N_00_14)
rf.fatal_acc<-randomForest(fatal_accY_N_00_14~.,data=fatal_pred_df,mtry=8,importance=T)
rf.fatal_acc.pred<-predict(rf.fatal_acc,fatal_pred_df)
```

#### Random Forest Confusion Matrix
```{r}
table(rf.fatal_acc.pred,fatal_pred_df$fatal_accY_N_00_14)
```

#### Random Forest Error Rate
```{r}
(0 + 0) / (23 + 32)
```
